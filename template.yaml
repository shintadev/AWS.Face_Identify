AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Root stack for managing face-extrator resources

Parameters:
  CollectionId:
    Type: String
    Default: face-collection
  BucketName:
    Type: String
    Default: face-extractor-ojt-s3bucket
  APIName:
    Type: String
    Default: rekognition-api
  RuleID:
    Type: String
    Default: SearchRule
  SearchPrefix:
    Type: String
    Default: search-image
  DynamoTableName:
    Type: String
    Default: my-rekognition-record

Resources:
  S3Bucket:
    Type: AWS::Serverless::Application
    Properties:
      Location: s3/template.yaml
      Parameters: 
        BucketName: !Ref BucketName
        RuleID: !Ref RuleID
        SearchPrefix: !Ref SearchPrefix
  Rekognition:
    Type: AWS::Serverless::Application
    Properties:
      Location: 'rekognition/template.yaml'
      Parameters:
        CollectionID: !Ref CollectionId
  Lambda:
    Type: AWS::Serverless::Application
    Properties:
      Location: 'lambda/template.yaml'
      Parameters:
        CollectionID: !Ref CollectionId
        S3ImageBucket: !Ref S3Bucket
  ApiGateway:
    Type: AWS::Serverless::Application
    Properties:
      Location: 'apigateway/template.yaml'
      Parameters:
        ApiName: !Ref APIName
        ExtractFaceInImagesArn: !GetAtt Lambda.Outputs.ExtractFaceInImagesArn
  DynamoDB:
    Type: AWS::Serverless::Application
    Properties:
      Location: dynamo/template.yaml
      Parameters:
        TableName: !Ref DynamoTableName


# Outputs:
  # DynamoDBTableName:
  #   Description: "DynamoDB Table Name"
  #   Value: !GetAtt DynamoDB.Outputs.DynamoDBTableName

  # ApiEndpoint:
  #   Description: "Orders API Gateway Endpoint URL"
  #   Value: !GetAtt APIGateway.Outputs.APIEndpoint
